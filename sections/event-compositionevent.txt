<section>
<h3 id="events-compositionevents">Composition Events</h3>

	Composition Events provide a means for inputing text in a supplementary or
	alternate manner than by Keyboard Events, in order to allow the use of
	characters that might not be commonly available on keyboard. For example,
	Composition Events might be used to add accents to characters despite their
	absence from standard US keyboards, to build up logograms of many Asian
	languages from their base components or categories, to select word choices
	from a combination of key presses on a mobile device keyboard, or to convert
	voice commands into text using a speech recognition processor. Refer to
	[[#keys]] for examples on how Composition Events are used in combination
	with keyboard events.

	Conceptually, a composition session consists of one EVENT{compositionstart}
	event, one or more EVENT{compositionupdate} events, and one
	EVENT{compositionend} event, with the value of the {{CompositionEvent/data}}
	attribute persisting between each <q>stage</q> of this event chain during
	each session.

	<p class="note"><strong>Note:</strong>
	While a composition session is active, keyboard events can be dispatched to
	the DOM if the keyboard is the input device used with the composition
	session. See the EVENT{compositionstart} event details</a> and
	<a href="#keys-IME">IME section</a> for relevent event ordering.
	</p>

	Not all <a>IME</a> systems or devices expose the necessary data to the DOM,
	so the active composition string (the <q>Reading Window</q> or <q>candidate
	selection menu option</q>) might not be available through this interface, in
	which case the selection MAY be represented by the <a>empty string</a>.

	<h4 id="interface-compositionevent">Interface CompositionEvent</h4>

		<p class="intro-dom">Introduced in this specification</p>

		The {{CompositionEvent}} interface provides specific contextual
		information associated with Composition Events.

		To create an instance of the {{CompositionEvent}} interface,
		use the {{CompositionEvent}} constructor, passing an optional
		{{CompositionEventInit}} dictionary.

		<h5 id="idl-compositionevent">CompositionEvent</h5>

			<pre class="idl">
			[Exposed=Window]
			interface CompositionEvent : UIEvent {
				constructor(DOMString type, optional CompositionEventInit eventInitDict = {});
				readonly attribute USVString data;
			};
			</pre>

			<dl dfn-for="CompositionEvent">
				<dt><dfn attribute>data</dfn></dt>
				<dd>
					<code>data</code> holds the value of the characters generated by
					an input method. This MAY be a single Unicode character or a
					non-empty sequence of Unicode characters [[Unicode]]. Characters
					SHOULD be normalized as defined by the Unicode normalization
					form <em>NFC</em>, defined in [[UAX15]]. This
					attribute MAY be the <a>empty string</a>.

					The <a>un-initialized value</a> of this attribute MUST be
					<code>""</code> (the empty string).
				</dd>
			</dl>

		<h5 id="idl-compositioneventinit">CompositionEventInit</h5>

			<pre class="idl">
			dictionary CompositionEventInit : UIEventInit {
				DOMString data = "";
			};
			</pre>

			<dl dfn-for="CompositionEventInit">
				<dt><dfn dict-member>data</dfn></dt>
				<dd>
					Initializes the <code>data</code> attribute of the
					CompositionEvent object to the characters generated by the IME
					composition.
				</dd>
			</dl>

	<h4 id="events-composition-order">Composition Event Order</h4>

		<p>The Composition Events defined in this specification MUST occur in the following set order relative to one another:</p>

		++---+-------------------+---------------------------------------------+
		=| # | Event Type        | Notes                                       |
		 +---+-------------------+---------------------------------------------+
		+| 1 | compositionstart  |                                             |
		+| 2 | compositionupdate | Multiple events                             |
		+| 3 | compositionend    |                                             |
		++---+-------------------+---------------------------------------------+

	<h4 id="events-composition-handwriting">Handwriting Recognition Systems</h4>

		The following example describes a possible sequence of events when
		composing a text passage <q>text</q> with a handwriting recognition
		system, such as on a pen tablet, as modeled using Composition Events.

		++---+-------------------+---------------------------+------------------------------+
		=| # | Event Type        | {{CompositionEvent}}<br>  | Notes                        |
		 |   |                   | {{CompositionEvent/data}} |                              |
		 +---+-------------------+------------o--------------+------------------------------+
		+| 1 | compositionstart  |        <code>""</code>    |                              |
		+|   |                   |                           | <em>User writes word on      |
		 |   |                   |                           | tablet surface</em>          |
		+| 2 | compositionupdate |    <code>"test"</code>    |                              |
		+|   |                   |                           | <em>User rejects first       |
		 |   |                   |                           | word-match suggestion,       |
		 |   |                   |                           | selects different match</em> |
		+| 3 | compositionupdate |    <code>"text"</code>    |                              |
		+| 4 | compositionend    |    <code>"text"</code>    |                              |
		++---+-------------------+----------------------------------------------------------+

	<h4 id="events-composition-canceling">Canceling Composition Events</h4>

		If a EVENT{keydown} event is canceled then any Composition Events that
		would have fired as a result of that EVENT{keydown} SHOULD not be
		dispatched:

		++---+------------+----------------------------------------------------+
		=| # | Event Type | Notes                                              |
		 +---+------------+----------------------------------------------------+
		+| 1 | keydown    | The <a>default action</a> is prevented, e.g., by   |
		 |   |            | invoking {{Event/preventDefault()}}.               |
		+|   |            | <em>No Composition Events are dispatched</em>      |
		+| 2 | keyup      |                                                    |
		++---+------------+----------------------------------------------------+

		If the initial EVENT{compositionstart} event is canceled then the text
		composition session SHOULD be terminated. Regardless of whether or not
		the composition session is terminated, the EVENT{compositionend} event
		MUST be sent.

		++---+------------------+-----------------------------------------------+
		=| # | Event Type       | Notes                                         |
		 +---+------------------+-----------------------------------------------+
		+| 1 | keydown          |                                               |
		+| 2 | compositionstart | The <a>default action</a> is prevented,       |
		 |   |                  | e.g., by invoking {{Event/preventDefault()}}. |
		+|   |                  | <em>No Composition Events are dispatched</em> |
		+| 3 | compositionend   |                                               |
		+| 4 | keyup            |                                               |
		++---+------------------+-----------------------------------------------+

	<h4 id="events-composition-key-events">Key Events During Composition</h4>

		During the composition session, EVENT{keydown} and EVENT{keyup} events
		MUST still be sent, and these events MUST have the
		{{KeyboardEvent/isComposing}} attribute set to <code>true</code>.

		++---+-------------------+-------------------------------+------------------------------+
		=| # | Event Type        | {{KeyboardEvent}}<br>         | Notes                        |
		 |   |                   | {{KeyboardEvent/isComposing}} |                              |
		 +---+-------------------+--------------o----------------+------------------------------+
		+| 1 | keydown           | false                         | This is the key event that   |
		 |   |                   |                               | initiates the composition.   |
		+| 2 | compositionstart  |                               |                              |
		+| 3 | compositionupdate |                               |                              |
		+| 4 | keyup             | true                          |                              |
		+|   | ...               |                               | Any key events sent during   |
		 |   |                   |                               | the composition session MUST |
		 |   |                   |                               | have <code>isComposing</code>|
		 |   |                   |                               | set to <code>true</code>.    |
		+| 5 | keydown           | true                          | This is the key event that   |
		 |   |                   |                               | exits the composition.       |
		+| 6 | compositionend    |                               |                              |
		+| 7 | keyup             | false                         |                              |
		++---+-------------------+-------------------------------+------------------------------+

	<h4 id="events-composition-input-events">Input Events During Composition</h4>

		During the composition session, the EVENT{compositionupdate} MUST be
		dispatched after the EVENT{beforeinput} is sent, but before the
		EVENT{input} event is sent.

		++---+-------------------+-----------------------------------------------+
		=| # | Event Type        | Notes                                         |
		 +---+-------------------+-----------------------------------------------+
		+| 1 | beforeinput       |                                               |
		+| 2 | compositionupdate |                                               |
		+|   |                   | <em>Any DOM updates occur at this point.</em> |
		+| 3 | input             |                                               |
		++---+-------------------+-----------------------------------------------+

		<p class="note">
		Most IMEs do not support canceling updates during a composition session.
		</p>

		The EVENT{beforeinput} and EVENT{input} events are sent along with the
		EVENT{compositionupdate} event whenever the DOM is updated as part of
		the composition. Since there are no DOM updates associated with the
		EVENT{compositionend} event, EVENT{beforeinput} and EVENT{input} events
		should not be sent at that time.

		++---+-------------------+-----------------------------------------------+
		=| # | Event Type        | Notes                                         |
		 +---+-------------------+-----------------------------------------------+
		+| 1 | beforeinput       | <em> Canceling this will prevent the DOM      |
		 |   |                   | update and the EVENT{input} event.</em>       |
		+| 2 | compositionupdate |                                               |
		+|   |                   | <em>Any DOM updates occur at this point.</em> |
		+| 3 | input             | <em>Sent only if the DOM was updated.</em>    |
		+| 4 | compositionend    |                                               |
		++---+-------------------+-----------------------------------------------+

	<h4 id="events-composition-types">Composition Event Types</h4>

		<h5 id="event-type-compositionstart"><dfn>compositionstart</dfn></h5>

			++------------------+--------------------------------------------------------------------------------------+ event-definition
			=| %                |                                                                                      |
			 +------------------+--------------------------------------------------------------------------------------+
			+| Type             | <strong><code>compositionstart</code></strong>                                       |
			+| Interface        | {{CompositionEvent}}                                                                 |
			+| Sync / Async     | Sync                                                                                 |
			+| Bubbles          | Yes                                                                                  |
			+| Trusted Targets  | <code>Element</code>                                                                 |
			+| Cancelable       | Yes                                                                                  |
			+| Composed         | Yes                                                                                  |
			+| Default action   | Start a new composition session when a <a>text composition system</a> is enabled     |
			+| Context<br>      | <ul>                                                                                 |
			 | (trusted events) | <li>{{Event}}.{{Event/target}} : focused element processing the composition</li>     |
			 |                  | <li>{{UIEvent}}.{{UIEvent/view}} : <a><code>Window</code></a></li>                   |
			 |                  | <li>{{UIEvent}}.{{UIEvent/detail}} : <code>0</code></li>                             |
			 |                  | <li>{{CompositionEvent}}.{{CompositionEvent/data}} : the original string being       |
			 |                  |     edited, otherwise the <a>empty string</a></li>                                   |
			 |                  | </ul>                                                                                |
			++------------------+--------------------------------------------------------------------------------------+

			A <a>user agent</a> MUST dispatch this event when a <a>text
			composition system</a> is enabled and a new composition session is
			about to begin (or has begun, depending on the <a>text composition
			system</a>) in preparation for composing a passage of text. This
			event type is device-dependent, and MAY rely upon the capabilities
			of the text conversion system and how it is mapped into the
			operating system. When a keyboard is used to feed an input method
			editor, this event type is generated after a EVENT{keydown} event,
			but speech or handwriting recognition systems MAY send this event
			type without keyboard events.  Some implementations MAY populate the
			{{CompositionEvent/data}} attribute of the EVENT{compositionstart}
			event with the text currently selected in the document (for editing
			and replacement). Otherwise, the value of the
			{{CompositionEvent/data}} attribute MUST be  the <a>empty string</a>.

			This event MUST be dispatched immediately before a <a>text
			composition system</a> begins a new composition session, and before
			the DOM is modified due to the composition process. The default
			action of this event is for the <a>text composition system</a> to
			start a new composition session. If this event is canceled, the
			<a>text composition system</a> SHOULD discard the current
			composition session.

			<p class="note">
			Canceling the EVENT{compositionstart} <em>event type</em> is
			distinct from canceling the <a>text composition system</a> itself
			(e.g., by hitting a cancel button or closing an <a>IME</a> window).
			</p>

			<p class="note">
			Some IMEs do not support cancelling an in-progress composition
			session (e.g., such as GTK which doesn't presently have such an
			API). In these cases, calling {{Event/preventDefault()}} will not
			stop this event's default action.
			</p>

		<h5 id="event-type-compositionupdate"><dfn>compositionupdate</dfn></h5>

			++------------------+--------------------------------------------------------------------------------------+ event-definition
			=| %                |                                                                                      |
			 +------------------+--------------------------------------------------------------------------------------+
			+| Type             | <strong><code>compositionupdate</code></strong>                                      |
			+| Interface        | {{CompositionEvent}}                                                                 |
			+| Sync / Async     | Sync                                                                                 |
			+| Bubbles          | Yes                                                                                  |
			+| Trusted Targets  | <code>Element</code>                                                                 |
			+| Cancelable       | No                                                                                   |
			+| Composed         | Yes                                                                                  |
			+| Default action   | None                                                                                 |
			+| Context<br>      | <ul>                                                                                 |
			 | (trusted events) | <li>{{Event}}.{{Event/target}} : focused element processing the composition,         |
			 |                  |     <code>null</code> if not accessible</li>                                         |
			 |                  | <li>{{UIEvent}}.{{UIEvent/view}} : <a><code>Window</code></a></li>                   |
			 |                  | <li>{{UIEvent}}.{{UIEvent/detail}} : <code>0</code></li>                             |
			 |                  | <li>{{CompositionEvent}}.{{CompositionEvent/data}} : the string comprising the       |
			 |                  |     current results of the composition session, which MAY be the <a>empty string</a> |
			 |                  |     if the content has been deleted</li>                                             |
			 |                  | </ul>                                                                                |
			++------------------+--------------------------------------------------------------------------------------+

			A <a>user agent</a> SHOULD dispatch this event during a composition
			session when a <a>text composition system</a> updates its active
			text passage with a new character, which is reflected in the string
			in {{CompositionEvent/data}}.

			In <a>text composition systems</a> which keep the ongoing
			composition in sync with the input control, the
			EVENT{compositionupdate} event MUST be dispatched before the control
			is updated.

			Some <a>text composition systems</a> might not expose this
			information to the DOM, in which case this event will not fire
			during the composition process.

			If the composition session is canceled, this event will be fired
			immediately before the EVENT{compositionend} event, and the
			{{CompositionEvent/data}} attribute will be set to the <a>empty
			string</a>.

		<h5 id="event-type-compositionend"><dfn>compositionend</dfn></h5>

			++------------------+--------------------------------------------------------------------------------------+ event-definition
			=| %                |                                                                                      |
			 +------------------+--------------------------------------------------------------------------------------+
			+| Type             | <strong><code>compositionend</code></strong>                                         |
			+| Interface        | {{CompositionEvent}}                                                                 |
			+| Sync / Async     | Sync                                                                                 |
			+| Bubbles          | Yes                                                                                  |
			+| Trusted Targets  | <code>Element</code>                                                                 |
			+| Cancelable       | No                                                                                   |
			+| Composed         | Yes                                                                                  |
			+| Default action   | None                                                                                 |
			+| Context<br>      | <ul>                                                                                 |
			 | (trusted events) | <li>{{Event}}.{{Event/target}} : focused element processing the composition</li>     |
			 |                  | <li>{{UIEvent}}.{{UIEvent/view}} : <a><code>Window</code></a></li>                   |
			 |                  | <li>{{UIEvent}}.{{UIEvent/detail}} : <code>0</code></li>                             |
			 |                  | <li>{{CompositionEvent}}.{{CompositionEvent/data}} : the string comprising the final |
			 |                  |     result of the composition session, which MAY be the <a>empty string</a> if the   |
			 |                  |     content has been deleted or if the composition process has been canceled</li>    |
			 |                  | </ul>                                                                                |
			++------------------+--------------------------------------------------------------------------------------+

			A <a>user agent</a> MUST dispatch this event when a <a>text
			composition system</a> completes or cancels the current composition
			session, and the EVENT{compositionend} event MUST be dispatched
			after the control is updated.

			This event is dispatched immediately after the <a>text composition
			system</a> completes the composition session (e.g., the <a>IME</a>
			is closed, minimized, switched out of focus, or otherwise dismissed,
			and the focus switched back to the <a>user agent</a>).

</section>
