<h3 id="events-wheelevents">Wheel Events</h3>

	Wheels are devices that can be rotated in one or more spatial dimensions, and which can be associated with a pointer device. The coordinate system depends on the
	environment configuration.

	<p class="example">
	The user's environment might be configured to associate vertical scrolling
	with rotation along the y-axis, horizontal scrolling with rotation along the
	x-axis, and zooming with rotation along the z-axis.
	</p>

	The deltaX, deltaY, and deltaZ attributes of {{WheelEvent}} objects indicate
	a measurement along their respective axes in units of pixels, lines, or
	pages. The reported measurements are provided after an environment-specific
	algorithm translates the actual rotation/movement of the wheel device into
	the appropriate values and units.

	<p class="note">
	A user's environment settings can be customized to interpret actual rotation/movement
	of a wheel device in different ways.
	One movement of a common <q>dented</q> mouse wheel can produce a measurement of 162 pixels
	(162 is just an example value, actual values can depend on the current screen
	dimensions of the user-agent).
	But a user can change their default environment settings to speed-up their mouse wheel,
	increasing this number.
	Furthermore, some mouse wheel software can support acceleration (the faster the wheel
	is rotated/moved, the greater the <a>delta</a> of each measurement) or even sub-pixel <a>rotation</a>
	measurements.
	Because of this, authors can not assume a given <a>rotation</a> amount in one user agent will
	produce the same <a>delta</a> value in all user agents.
	</p>

	The sign (positive or negative) of the values of the deltaX, deltaY, and deltaZ attributes
	MUST be consistent between multiple dispatches of the
	EVENT{wheel} event while the
	motion of the actual wheel device is rotating/moving in the same direction.
	If a user agent scrolls as the default action of the
	EVENT{wheel} event then the sign
	of the <a>delta</a> SHOULD be given by a right-hand coordinate system where positive X,
	Y, and Z axes are directed towards the right-most edge, bottom-most edge, and farthest
	depth (away from the user) of the document, respectively.

	<p class="note">
	Individual user agents can (depending on their environment and hardware configuration)
	interpret the same physical user interaction on the wheel differently.
	For example, a vertical swipe on the edge of a trackpad from top to bottom can be
	interpreted as a wheel action intended to either scroll the
	page down or to pan the page up (i.e., resulting in either a positive or negative
	deltaY value respectively).
	</p>

	A <a>user agent</a> MUST create a <a>wheel event transaction</a> when the first wheel event
	is fired, so that all subsequent wheel events within a implementation-specific amount of
	time can be targetted at the same element. A <dfn>wheel event transaction</dfn> is series of
	wheel events that are associated with a single user gesture. The
	<a>wheel event transaction</a> MUST have an associated event target that is the
	<a>topmost event target</a> at the time the first wheel event occurs in the group.

	<p class="example">
	If a series of wheel events targetted in a scrollable element start above a child element,
	later events for the same user gesture may occur over the child element.
	</p>

	<h4 id="interface-wheelevent">Interface WheelEvent</h4>

		<p class="intro-dom">Introduced in this specification</p>

		The {{WheelEvent}} interface provides specific contextual information
		associated with EVENT{wheel} events.

		To create an instance of the {{WheelEvent}} interface, use the {{WheelEvent}} constructor,
		passing an optional {{WheelEventInit}} dictionary.

		<h5 id="idl-wheelevent">WheelEvent</h5>

			<pre class="idl">
			[Exposed=Window]
			interface WheelEvent : MouseEvent {
				constructor(DOMString type, optional WheelEventInit eventInitDict = {});
				// DeltaModeCode
				const unsigned long DOM_DELTA_PIXEL = 0x00;
				const unsigned long DOM_DELTA_LINE	= 0x01;
				const unsigned long DOM_DELTA_PAGE	= 0x02;

				readonly attribute double deltaX;
				readonly attribute double deltaY;
				readonly attribute double deltaZ;
				readonly attribute unsigned long deltaMode;
			};
			</pre>

			<dl dfn-for="WheelEvent">
				<dt><dfn const>DOM_DELTA_PIXEL</dfn></dt>
				<dd>
					The units of measurement for the <a>delta</a> MUST be pixels.
					This is the most typical case in most operating system and
					implementation configurations.
				</dd>

				<dt><dfn const>DOM_DELTA_LINE</dfn></dt>
				<dd>
					The units of measurement for the <a>delta</a> MUST be individual
					lines of text.  This is the case for many form controls.
				</dd>

				<dt><dfn const>DOM_DELTA_PAGE</dfn></dt>
				<dd>
					The units of measurement for the <a>delta</a> MUST be pages,
					either defined as a single screen or as a demarcated page.
				</dd>

				<dt><dfn attribute>deltaX</dfn></dt>
				<dd>
					In user agents where the default action of the EVENT{wheel}
					event is to scroll, the value MUST be the measurement along the
					x-axis (in pixels, lines, or pages) to be scrolled in the case
					where the event is not cancelled. Otherwise, this is an
					implementation-specific measurement (in pixels, lines, or pages)
					of the movement of a wheel device around the x-axis.

					The <a>un-initialized value</a> of this attribute MUST be
					<code>0.0</code>.
				</dd>

				<dt><dfn attribute>deltaY</dfn></dt>
				<dd>
					In user agents where the default action of the EVENT{wheel}
					event is to scroll, the value MUST be the measurement along the
					y-axis (in pixels, lines, or pages) to be scrolled in the case
					where the event is not cancelled. Otherwise, this is an
					implementation-specific measurement (in pixels, lines, or pages)
					of the movement of a wheel device around the y-axis.

					The <a>un-initialized value</a> of this attribute MUST be
					<code>0.0</code>.
				</dd>

				<dt><dfn attribute>deltaZ</dfn></dt>
				<dd>
					In user agents where the default action of the EVENT{wheel}
					event is to scroll, the value MUST be the measurement along the
					z-axis (in pixels, lines, or pages) to be scrolled in the case
					where the event is not cancelled. Otherwise, this is an
					implementation-specific measurement (in pixels, lines, or pages)
					of the movement of a wheel device around the z-axis.

					The <a>un-initialized value</a> of this attribute MUST be
					<code>0.0</code>.
				</dd>

				<dt><dfn attribute>deltaMode</dfn></dt>
				<dd>
					The <code>deltaMode</code> attribute contains an indication of
					the units of measurement for the <a>delta</a> values. The
					default value is {{WheelEvent/DOM_DELTA_PIXEL}} (pixels).

					This attribute MUST be set to one of the DOM_DELTA constants to
					indicate the units of measurement for the <a>delta</a> values.
					The precise measurement is specific to device, operating system,
					and application configurations.

					The <a>un-initialized value</a> of this attribute MUST be
					<code>0</code>.
				</dd>
			</dl>

		<h5 id="idl-wheeleventinit">WheelEventInit</h5>

			<pre class="idl">
			dictionary WheelEventInit : MouseEventInit {
				double deltaX = 0.0;
				double deltaY = 0.0;
				double deltaZ = 0.0;
				unsigned long deltaMode = 0;
			};
			</pre>

			<dl dfn-for="WheelEventInit">
				<dt><dfn dict-member>deltaX</dfn></dt>
				<dd>See <code>deltaZ</code> attribute.</dd>

				<dt><dfn dict-member>deltaY</dfn></dt>
				<dd>See <code>deltaZ</code> attribute.</dd>

				<dt><dfn dict-member>deltaZ</dfn></dt>
				<dd>
					Initializes the {{WheelEvent/deltaZ}} attribute of the {{WheelEvent}}
					object. Relative positive values for this attribute (as well as
					the {{WheelEvent/deltaX}} and {{WheelEvent/deltaY}} attributes) are
					given by a right-hand coordinate system where the X, Y, and Z
					axes are directed towards the right-most edge, bottom-most edge,
					and farthest depth (away from the user) of the document,
					respectively. Negative relative values are in the respective
					opposite directions.
				</dd>

				<dt><dfn dict-member>deltaMode</dfn></dt>
				<dd>
					Initializes the {{WheelEvent/deltaMode}} attribute on the
					{{WheelEvent}} object to the enumerated values 0, 1, or 2, which
					represent the amount of pixels scrolled
					({{WheelEvent/DOM_DELTA_PIXEL}}), lines scrolled
					({{WheelEvent/DOM_DELTA_LINE}}), or pages scrolled
					({{WheelEvent/DOM_DELTA_PAGE}}) if the <a>rotation</a> of the
					wheel would have resulted in scrolling.
				</dd>
			</dl>

	<h4 id="events-wheel-types">Wheel Event Types</h4>

		<h5 id="event-type-wheel"><dfn>wheel</dfn></h5>

			++------------------+--------------------------------------------------------------------------------------+ event-definition
			=| %                |                                                                                      |
			 +------------------+--------------------------------------------------------------------------------------+
			+| Type             | <strong><code>wheel</code></strong>                                                  |
			+| Interface        | {{WheelEvent}}                                                                       |
			+| Sync / Async     | Async                                                                                |
			+| Bubbles          | Yes                                                                                  |
			+| Trusted Targets  | <code>Element</code>                                                                 |
			+| Cancelable       | <a href="#cancelability-of-wheel-events">Varies</a>                                                  |
			+| Composed         | Yes                                                                                  |
			+| Default action   | Scroll (or zoom) the document                                                        |
			+| Context<br>      | <ul>                                                                                 |
			 | (trusted events) | <li>{{Event}}.{{Event/target}} : element target for the current                      |
			 |                  |     <a>wheel event transaction</a>                                                   |
			 |                  | <li>{{UIEvent}}.{{UIEvent/view}} : <a><code>Window</code></a></li>                   |
			 |                  | <li>{{UIEvent}}.{{UIEvent/detail}} : <code>0</code></li>                             |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/screenX}} : if the wheel is associated with a        |
			 |                  |     pointing device, the value based on the pointer position on the screen,          |
			 |                  |     otherwise <code>0</code></li>                                                    |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/screenY}} : if the wheel is associated with a        |
			 |                  |     pointing device, the value based on the pointer position on the screen,          |
			 |                  |     otherwise <code>0</code></li>                                                    |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/clientX}} : if the wheel is associated with a        |
			 |                  |     pointing device, the value based on the pointer position within the viewport,    |
			 |                  |     otherwise <code>0</code></li>                                                    |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/clientY}} : if the wheel is associated with a        |
			 |                  |     pointing device, the value based on the pointer position within the viewport,    |
			 |                  |     otherwise <code>0</code></li>                                                    |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/altKey}} : <code>true</code> if KEYCAP{Alt}          |
			 |                  |     modifier was active, otherwise <code>false</code></li>                           |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/ctrlKey}} : <code>true</code> if KEYCAP{Control}     |
			 |                  |     modifier was active, otherwise <code>false</code></li>                           |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/shiftKey}} : <code>true</code> if KEYCAP{Shift}      |
			 |                  |     modifier was active, otherwise <code>false</code></li>                           |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/metaKey}} : <code>true</code> if KEYCAP{Meta}        |
			 |                  |     modifier was active, otherwise <code>false</code></li>                           |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/button}} : if wheel is associated with a pointing    |
			 |                  |     device, value based on current button pressed, otherwise <code>0</code></li>     |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/buttons}} : if wheel is associated with a pointing   |
			 |                  |     device, value based on all buttons current depressed,                            |
			 |                  |     <code>0</code> if no buttons pressed</li>                                        |
			 |                  | <li>{{MouseEvent}}.{{MouseEvent/relatedTarget}} : indicates the <a>event target</a>  |
			 |                  |     the pointing device is pointing at, if any</li>                                  |
			 |                  | <li>{{WheelEvent}}.{{WheelEvent/deltaX}} : expected amount that the page will scroll |
			 |                  |     along the x-axis according to the deltaMode units; or an implementation-specific |
			 |                  |     value of movement of a wheel around the x-axis</li>                              |
			 |                  | <li>{{WheelEvent}}.{{WheelEvent/deltaY}} : expected amount that the page will scroll |
			 |                  |     along the y-axis according to the deltaMode units; or an implementation-specific |
			 |                  |     value of movement of a wheel around the y-axis</li>                              |
			 |                  | <li>{{WheelEvent}}.{{WheelEvent/deltaZ}} : expected amount that the page will scroll |
			 |                  |     along the z-axis according to the deltaMode units; or an implementation-specific |
			 |                  |     value of movement of a wheel around the z-axis</li>                              |
			 |                  | <li>{{WheelEvent}}.{{WheelEvent/deltaMode}} : unit indicator (pixels, lines, or      |
			 |                  |     pages) for the deltaX, deltaY, and deltaZ attributes</li>                        |
			 |                  | </ul>                                                                                |
			++------------------+--------------------------------------------------------------------------------------+

			A <a>user agent</a> MUST dispatch this event when a mouse wheel has
			been rotated around any axis, or when an equivalent input device
			(such as a mouse-ball, certain tablets or touchpads, etc.) has
			emulated such an action. Depending on the platform and input device,
			diagonal wheel <a>deltas</a> MAY be delivered either as a single
			EVENT{wheel} event with multiple non-zero axes or as separate
			EVENT{wheel} events for each non-zero axis.

			The typical <a>default action</a> of the EVENT{wheel} event type is
			to scroll (or in some cases, zoom) the document by the indicated
			amount.  If this event is canceled, the implementation MUST NOT
			scroll or zoom the document (or perform whatever other
			implementation-specific default action is associated with this event
			type).

			<p class="note">
			In some <a>user agents</a>, or with some input devices, the speed
			that the wheel has been turned can affect the <a>delta</a> values,
			with a faster speed producing a higher <a>delta</a> value.
			</p>

		<h5 id="cancelability-of-wheel-events">cancelability of wheel events</h5>
			<p>
			Calling <code>preventDefault</code> on a wheel event can prevent
			or otherwise interrupt scrolling. For maximum scroll performance, a
			user agent may not wait for each wheel event associated with the scroll
			to be processed to see if it will be canceled. In such cases the user
			agent should generate <code>wheel</code> events whose
			<code>cancelable</code> property is <code>false</code>, indicating that
			<code>preventDefault</code> cannot be used to prevent or interrupt
			scrolling. Otherwise <code>cancelable</code> will be <code>true</code>.
			</p>

			<p>
			In particular, a user agent should generate only uncancelable
			<code>wheel</code> events when it
			<a href="https://dom.spec.whatwg.org/#observing-event-listeners">observes
			that there are no non-passive listeners</a> for the event.
			</p>


